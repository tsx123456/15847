[1,["fdoJXLgx1GAa2UhGATlj3o","174d28472@6c48a","20g1ukYUVPvKWKBRznAKo+@f9941","b7MFJ8MjNBwqr3fNq1j5dJ@f9941","54TknWPwVPqJqeCR+Y/Czo@f9941","95EkngnxZFbYuFpsqVTaFr@f9941","b51hFfA3BNfKrTwZTMcc+Y","59q9zo921MQYjvkC1V1XfE@f9941","4aP2H1hlxAIJfAFgmbyd/S@f9941","85jESVxuxLILHaghr3beho@f9941","20g1ukYUVPvKWKBRznAKo+@6c48a","84veg4A51FAI6kLlKekdfj@f9941","54TknWPwVPqJqeCR+Y/Czo@6c48a","9a9zg05QhESbZe2v5pNicq","91sTAe75hL6rKuh6itkpeA","cdwDhLrDNGvKRP4Z29P2UD@6c48a","7f1MBR5xRHKJldnjJgxsT8","95EkngnxZFbYuFpsqVTaFr@6c48a","f2SOTnGoVP4Y/nCO4viWyr","b7MFJ8MjNBwqr3fNq1j5dJ@6c48a","57VJow/u1Kv5rZorYfc61W","73P9GSAlhLD7WP9fXFYibi","ddxZa2lyxA9JepNkF0flSI@f9941","0ecB6j/SVEvpjOVfgREWQw@f9941","89Smonp2RPRZNEvtD2e1N8@6c48a"],["node","_customMaterial","_textureSource","_spriteFrame","root","data","_effectAsset","_parent","_normalSprite","_hoverSprite","_pressedSprite","_disabledSprite","_skeletonData","bg","bgEvent","labelBg","label","textSubTip","textcontent","buttonqx","buttonsure2","buttonsure1"],["cc.SpriteFrame","cc.ImageAsset","cc.Texture2D",["cc.Sprite",["_type","_sizeMode","_isTrimmedMode","node","__prefab","_customMaterial","_spriteFrame","_color"],0,1,4,6,6,5],["cc.Label",["_string","_actualFontSize","_fontSize","_overflow","_fontFamily","_underlineHeight","_lineHeight","_isBold","_enableOutline","node","__prefab","_color","_customMaterial"],-6,1,4,5,6],["cc.Node",["_name","_layer","_objFlags","_components","_prefab","_children","_parent","_lpos"],0,9,4,2,1,5],["cc.Node",["_name","_layer","_active","_parent","_components","_prefab","_lpos","_children"],0,1,12,4,5,2],["cc.Widget",["_alignFlags","_originalWidth","_originalHeight","_left","_right","_isAbsLeft","_isAbsRight","_top","_bottom","node","__prefab"],-6,1,4],["cc.Prefab",["_name","optimizationPolicy"],1],["cc.Layout",["_resizeMode","_layoutType","_paddingTop","_paddingBottom","node","__prefab"],-1,1,4],["cc.UIOpacity",["_opacity","node","__prefab"],2,1,4],["43ee26ZTHBPU7rK2hzsCUZG",["isremove","istouch","node","__prefab","bgEvent","bg"],1,1,4,1,1],["cc.CompPrefabInfo",["fileId"],2],["d0493ihAJlPWas8emInriPW",["node","__prefab","label","labelBg"],3,1,4,1,1],["cc.UITransform",["node","__prefab","_contentSize"],3,1,4,5],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.AudioClip",["_name","_native","_duration"],0],["cc.Material",["_name","_props","_states","_defines"],-1],["sp.SkeletonData",["_name","_atlasText","textureNames","_skeletonJson","textures"],-1,3],["cc.BlockInputEvents",["node","__prefab"],3,1,4],["sp.Skeleton",["defaultSkin","defaultAnimation","_premultipliedAlpha","_preCacheMode","node","__prefab","_customMaterial","_skeletonData"],-1,1,4,6,6],["49cec17EdpM0YbYncVRwUSo",["waitTime","node","__prefab"],2,1,4],["30f1fNPLVJGv4nAirAcsjYo",["node","__prefab","buttonsure1","buttonsure2","buttonqx","textcontent","textSubTip"],3,1,4,1,1,1,1,1],["9e844SLwkpOqaXJMuA83gHU",["_text","show","node","__prefab"],1,1,4],["cc.Button",["_transition","node","__prefab","clickEvents","_normalColor","_hoverColor","_pressedColor","_disabledColor","_target"],2,1,4,9,5,5,5,5,1],["cc.ClickEvent",["_componentId","handler","customEventData","target"],0,1]],[[12,0,2],[14,0,1,2,1],[15,0,1,2,3,4,5,5],[10,1,2,1],[7,0,1,2,9,10,4],[5,0,1,6,3,4,3],[5,0,1,6,3,4,7,3],[9,4,5,1],[20,0,1,1],[5,0,1,5,3,4,3],[3,3,4,5,6,1],[24,0,1,2,3,3],[3,0,1,3,4,7,5,6,3],[10,0,1,2,2],[16,0,1,2,4],[18,0,1,2,3,5],[8,0,2],[5,0,1,6,5,3,4,7,3],[5,0,2,1,5,3,4,4],[6,0,2,1,3,7,4,5,6,4],[3,1,2,3,4,5,6,3],[4,0,1,2,4,3,9,10,6],[25,0,1,2,3,4,5,6,7,8,2],[26,0,1,2,3,4],[8,0,1,3],[3,0,1,3,4,7,5,3],[4,0,1,2,4,6,3,7,8,9,10,11,9],[19,0,1,2,3,4,5],[21,0,1,2,3,4,5,6,7,5],[6,0,1,3,4,5,3],[6,0,1,3,4,5,6,3],[6,0,2,1,3,4,5,6,4],[3,0,3,4,5,2],[3,0,1,3,4,5,6,3],[9,0,1,2,3,4,5,5],[7,0,3,4,5,6,1,9,10,7],[7,0,3,4,7,8,5,6,1,2,9,10,10],[13,0,1,2,3,1],[4,0,1,2,6,3,5,9,10,7],[4,0,1,2,4,3,7,5,9,10,8],[4,0,1,2,4,3,5,9,10,7],[4,0,1,2,4,3,5,9,10,12,7],[17,0,1,2,4],[22,0,1,2,2],[11,0,1,2,3,4,5,3],[11,0,2,3,4,5,2],[23,0,1,2,3,4,5,6,1]],[[[{"name":"btn_reject","rect":{"x":379,"y":678,"width":256,"height":76},"offset":{"x":0,"y":0},"originalSize":{"width":256,"height":76},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[1]],[[{"fmt":"0","w":883,"h":793},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["174d28472"]}],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,2,2,0,0","mipmaps":["20g1ukYUVPvKWKBRznAKo+"]}],[2],0,[],[],[]],[[{"name":"default_btn_normal","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"vertices":{"rawPosition":[-20,-20,0,20,-20,0,-20,20,0,20,20,0],"indexes":[0,1,2,2,1,3],"uv":[0,40,40,40,0,0,40,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-20,"y":-20,"z":0},"maxPos":{"x":20,"y":20,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[10]],[[{"name":"record3","rect":{"x":729,"y":753,"width":36,"height":36},"offset":{"x":0,"y":0},"originalSize":{"width":36,"height":36},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[1]],[[{"name":"record1","rect":{"x":641,"y":748,"width":42,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":42,"height":40},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[1]],[[[24,"showToast",2],[9,"showToast",1,[-10],[[32,1,-2,[0,"38NjcpQJNDC7w9Px8URD4n"],2],[7,-3,[0,"72X7VGEDRF8pkPvK/jvhBh"]],[4,45,200,150,-4,[0,"491xh8DiFJf6fz/aWQYni2"]],[37,-7,[0,"f2jJTHqlRH46EJhRxq8ZzG"],-6,-5],[3,-8,[0,"dbicyCXgBMvKubLtlu/wlO"]],[1,-9,[0,"bcKwx89HtPnY/iZPnD3NF4"],[5,750,1334]]],[2,"31EAimJPNOD4dD8tT5ZTw/",null,null,null,-1,0]],[17,"tip_bg",1,1,[-16],[[33,1,0,-11,[0,"530ZqGTzdJb4MAt8L/ZJs/"],0,1],[3,-12,[0,"32X2BI7cpGnLCT35rTj0jp"]],[1,-13,[0,"a1JWOa+mRGepEoUke2LJJx"],[5,600,60.32]],[35,40,0.1,0.1,false,false,400,-14,[0,"b9gxPQNb1Kj5qpFgahCF+b"]],[34,1,2,10,10,-15,[0,"c772AYaBtKMJjtNObN3czq"]]],[2,"cfgkOb5UlLx5K1gM+NZCDZ",null,null,null,1,0],[1,0,-151.878,0]],[29,"tips_label",1,2,[[-17,[3,-18,[0,"bb72wVxx5ENYuvfZj/09k+"]],[1,-19,[0,"1dB6b9ALlCH7biAUPYAOsn"],[5,480,40.32]],[36,40,0.1,0.1,798.718,494.96200000000005,false,false,300,40.32,-20,[0,"25+i6POmBNKJCs35lAxbqX"]]],1,4,4,4],[2,"24IWi4YgVA1LAun9omtB/P",null,null,null,1,0]],[38,"gold not ",32,32,32,3,0,3,[0,"23FaMpchlFvaFIFQFSwBne"]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,15,2,0,16,4,0,0,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,-1,3,0,-1,4,0,0,3,0,0,3,0,0,3,0,5,1,20],[0,0,0,4],[1,3,1,1],[0,11,0,0]],[[{"name":"icon_jingshi","rect":{"x":379,"y":486,"width":155,"height":186},"offset":{"x":0,"y":0},"originalSize":{"width":155,"height":186},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[1]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,2,2,0,0","mipmaps":["54TknWPwVPqJqeCR+Y/Czo"]}],[2],0,[],[],[]],[[{"name":"default_btn_pressed","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"vertices":{"rawPosition":[-20,-20,0,20,-20,0,-20,20,0,20,20,0],"indexes":[0,1,2,2,1,3],"uv":[0,40,40,40,0,0,40,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-20,"y":-20,"z":0},"maxPos":{"x":20,"y":20,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[12]],[[[14,"../resources/effect/LineSprite",[{"hash":1095977805,"name":"../resources/effect/LineSprite|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"grays","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":["USE_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"grays","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n    highp vec4 cc_reflectionProbeBlendData1;\n    highp vec4 cc_reflectionProbeBlendData2;\n  };\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 color;\n#if USE_TEXTURE\n  in vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nlayout(std140) uniform ARGS{\n  float grays;\n};\nvec4 outer_glow(float dist_f_, vec4 color_v4_, vec4 input_color_v4_, float radius_f_) {\n  float a_f = abs(clamp(dist_f_ / radius_f_, 0.0, 1.0) - 1.0);\n  float b_f = min(max(0.0, dist_f_), pow(a_f, 5.0));\n  return color_v4_ + input_color_v4_ * b_f;\n}\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n  #endif\n  o *= color;\n  o = outer_glow(grays, o, vec4(1.0, 1.0, 0.0, 1.0), 50.0);\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 color;\n#if USE_TEXTURE\n  varying vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\n   uniform float grays;\nvec4 outer_glow(float dist_f_, vec4 color_v4_, vec4 input_color_v4_, float radius_f_) {\n  float a_f = abs(clamp(dist_f_ / radius_f_, 0.0, 1.0) - 1.0);\n  float b_f = min(max(0.0, dist_f_), pow(a_f, 5.0));\n  return color_v4_ + input_color_v4_ * b_f;\n}\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n  #endif\n  o *= color;\n  o = outer_glow(grays, o, vec4(1.0, 1.0, 0.0, 1.0), 50.0);\n  ALPHA_TEST(o);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":2}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"CC_USE_EMBEDDED_ALPHA","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"}]}],[{"passes":[{"program":"../resources/effect/LineSprite|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"grays":{"type":13,"value":[0]}}}]}]]],0,0,[],[],[]],[[{"name":"btn_Agree","rect":{"x":641,"y":486,"width":256,"height":76},"offset":{"x":0,"y":0},"originalSize":{"width":256,"height":76},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[1]],[[[42,"buttonClick",".mp3",0.10449],-1],0,0,[],[],[]],[[[15,"graySpine",[{"grays":0}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}]]],0,0,[0],[6],[13]],[[[15,"graySprite",[{"grays":0}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true}]]],0,0,[0],[6],[14]],[[[27,"shaizi","\r\nshaizi.png\r\nsize: 256,32\r\nformat: RGBA8888\r\nfilter: Linear,Linear\r\nrepeat: none\r\nic/1\r\n  rotate: false\r\n  xy: 146, 4\r\n  size: 24, 26\r\n  orig: 24, 26\r\n  offset: 0, 0\r\n  index: -1\r\nic/shai\r\n  rotate: false\r\n  xy: 224, 6\r\n  size: 23, 24\r\n  orig: 23, 24\r\n  offset: 0, 0\r\n  index: -1\r\nic/shai2\r\n  rotate: false\r\n  xy: 172, 6\r\n  size: 24, 24\r\n  orig: 24, 24\r\n  offset: 0, 0\r\n  index: -1\r\nic/shai3\r\n  rotate: false\r\n  xy: 198, 6\r\n  size: 24, 24\r\n  orig: 24, 24\r\n  offset: 0, 0\r\n  index: -1\r\nic/shai4\r\n  rotate: true\r\n  xy: 119, 3\r\n  size: 27, 25\r\n  orig: 27, 25\r\n  offset: 0, 0\r\n  index: -1\r\nic/shai5\r\n  rotate: true\r\n  xy: 34, 2\r\n  size: 28, 27\r\n  orig: 28, 27\r\n  offset: 0, 0\r\n  index: -1\r\nic/shai6\r\n  rotate: false\r\n  xy: 63, 2\r\n  size: 26, 28\r\n  orig: 26, 28\r\n  offset: 0, 0\r\n  index: -1\r\nic/shai7\r\n  rotate: true\r\n  xy: 91, 2\r\n  size: 28, 26\r\n  orig: 28, 26\r\n  offset: 0, 0\r\n  index: -1\r\nic/shai8\r\n  rotate: true\r\n  xy: 2, 2\r\n  size: 28, 30\r\n  orig: 28, 30\r\n  offset: 0, 0\r\n  index: -1\r\n",["shaizi.png"],{"skeleton":{"hash":"VX2s+9heweB/z/0g9vJGHkJlrF0","spine":"3.7.93","width":58.23,"height":44.94},"bones":[{"name":"root"},{"name":"zong","parent":"root","x":-145.74,"y":-30.03},{"name":"zong2","parent":"zong","x":161.23,"y":48.42},{"name":"zong3","parent":"zong","x":127,"y":29.48}],"slots":[{"name":"ic/shai","bone":"zong2","attachment":"ic/1"},{"name":"ic/shai2","bone":"zong3","attachment":"ic/1"}],"skins":{"default":{"ic/shai":{"ic/1":{"width":24,"height":26},"ic/shai":{"x":0.5,"width":23,"height":24},"ic/shai2":{"width":24,"height":24},"ic/shai3":{"width":24,"height":24},"ic/shai4":{"x":0.5,"y":0.5,"width":27,"height":25},"ic/shai5":{"y":0.5,"width":28,"height":27},"ic/shai6":{"width":26,"height":28},"ic/shai7":{"width":28,"height":26},"ic/shai8":{"width":28,"height":30}},"ic/shai2":{"ic/1":{"width":24,"height":26},"ic/shai":{"x":0.5,"width":23,"height":24},"ic/shai2":{"width":24,"height":24},"ic/shai3":{"width":24,"height":24},"ic/shai4":{"x":0.5,"y":0.5,"width":27,"height":25},"ic/shai5":{"y":0.5,"width":28,"height":27},"ic/shai6":{"width":26,"height":28},"ic/shai7":{"width":28,"height":26},"ic/shai8":{"width":28,"height":30}}}},"animations":{"shaizi":{"slots":{"ic/shai":{"color":[{"time":0,"color":"ffffffff","curve":"stepped"},{"time":0.6333,"color":"ffffffff"},{"time":0.6667,"color":"ffffff00"}],"attachment":[{"time":0,"name":"ic/shai4"},{"time":0.0333,"name":"ic/shai2"},{"time":0.0667,"name":"ic/shai8"},{"time":0.1,"name":"ic/shai4"},{"time":0.1333,"name":"ic/shai"},{"time":0.1667,"name":"ic/shai2"},{"time":0.2,"name":"ic/shai5"},{"time":0.2333,"name":"ic/shai"},{"time":0.2667,"name":"ic/shai4"},{"time":0.3,"name":"ic/shai3"},{"time":0.3333,"name":"ic/shai5"},{"time":0.3667,"name":"ic/shai3"},{"time":0.4,"name":"ic/shai4"},{"time":0.4333,"name":"ic/shai8"},{"time":0.4667,"name":"ic/shai"},{"time":0.5,"name":"ic/shai4"},{"time":0.5333,"name":"ic/shai2"},{"time":0.5667,"name":"ic/shai5"},{"time":0.6,"name":"ic/shai7"},{"time":0.6333,"name":"ic/shai6"}]},"ic/shai2":{"color":[{"time":0,"color":"ffffffff","curve":"stepped"},{"time":0.6333,"color":"ffffffff"},{"time":0.6667,"color":"ffffff00"}],"attachment":[{"time":0,"name":"ic/shai5"},{"time":0.0333,"name":"ic/shai6"},{"time":0.0667,"name":"ic/shai7"},{"time":0.1,"name":"ic/shai6"},{"time":0.1333,"name":"ic/shai4"},{"time":0.1667,"name":"ic/shai8"},{"time":0.2,"name":"ic/shai"},{"time":0.2333,"name":"ic/shai4"},{"time":0.2667,"name":"ic/shai7"},{"time":0.3,"name":"ic/shai"},{"time":0.3333,"name":"ic/shai6"},{"time":0.3667,"name":"ic/shai4"},{"time":0.4,"name":"ic/shai2"},{"time":0.4333,"name":"ic/shai5"},{"time":0.4667,"name":"ic/shai7"},{"time":0.5,"name":"ic/shai3"},{"time":0.5333,"name":"ic/shai5"},{"time":0.5667,"name":"ic/shai7"},{"time":0.6,"name":"ic/shai4"},{"time":0.6333,"name":"ic/shai2"}]}},"bones":{"zong3":{"rotate":[{"time":0,"angle":0,"curve":"stepped"},{"time":0.0333,"angle":0},{"time":0.0667,"angle":28.42},{"time":0.1,"angle":0,"curve":"stepped"},{"time":0.1333,"angle":0,"curve":"stepped"},{"time":0.3,"angle":0},{"time":0.3333,"angle":41.5},{"time":0.3667,"angle":0,"curve":"stepped"},{"time":0.5667,"angle":0},{"time":0.6,"angle":-168.71},{"time":0.6333,"angle":0,"curve":"stepped"},{"time":0.6667,"angle":0}],"translate":[{"time":0,"x":0,"y":0},{"time":0.0333,"x":9.6,"y":-6.72},{"time":0.0667,"x":18.24,"y":-6.24},{"time":0.1,"x":25.17,"y":-8.84},{"time":0.1333,"x":37.29,"y":-3.21},{"time":0.1667,"x":35.56,"y":9.78},{"time":0.2,"x":31.45,"y":19.13},{"time":0.2333,"x":23.22,"y":22.87},{"time":0.2667,"x":12,"y":22.87},{"time":0.3,"x":-0.72,"y":7.91},{"time":0.3333,"x":8.56,"y":-6.49},{"time":0.3667,"x":18.16,"y":-6.17},{"time":0.4,"x":24.56,"y":-9.05},{"time":0.4333,"x":37.68,"y":0.23},{"time":0.4667,"x":36.08,"y":11.43},{"time":0.5,"x":36.08,"y":18.79},{"time":0.5333,"x":24.56,"y":22.31},{"time":0.5667,"x":9.2,"y":22.31},{"time":0.6,"x":0.56,"y":16.55},{"time":0.6333,"x":-2,"y":7.47,"curve":"stepped"},{"time":0.6667,"x":-2,"y":7.47}],"scale":[{"time":0,"x":1,"y":1,"curve":"stepped"},{"time":0.6667,"x":1,"y":1}],"shear":[{"time":0,"x":0,"y":0,"curve":"stepped"},{"time":0.6667,"x":0,"y":0}]},"zong2":{"rotate":[{"time":0,"angle":0,"curve":"stepped"},{"time":0.0333,"angle":0},{"time":0.0667,"angle":53.05},{"time":0.1,"angle":0,"curve":"stepped"},{"time":0.3,"angle":0},{"time":0.3333,"angle":101.88},{"time":0.3667,"angle":0,"curve":"stepped"},{"time":0.4,"angle":0},{"time":0.4333,"angle":-42.35},{"time":0.4667,"angle":0,"curve":"stepped"},{"time":0.6667,"angle":0}],"translate":[{"time":0,"x":0,"y":0},{"time":0.0333,"x":-10.08,"y":3.84},{"time":0.0667,"x":-21.6,"y":3.36},{"time":0.1,"x":-33.29,"y":-4.87},{"time":0.1333,"x":-35.46,"y":-14.83},{"time":0.1667,"x":-28.57,"y":-22.75},{"time":0.2,"x":-22.21,"y":-26.49},{"time":0.2333,"x":-12.49,"y":-27.62},{"time":0.2667,"x":-1.27,"y":-24.25},{"time":0.3,"x":4.45,"y":-11.29},{"time":0.3333,"x":-10.27,"y":4.71},{"time":0.3667,"x":-23.71,"y":2.79},{"time":0.4,"x":-33.95,"y":-1.05},{"time":0.4333,"x":-37.15,"y":-12.25},{"time":0.4667,"x":-32.03,"y":-19.93},{"time":0.5,"x":-23.71,"y":-24.41},{"time":0.5333,"x":-11.87,"y":-26.65},{"time":0.5667,"x":0.29,"y":-24.41},{"time":0.6,"x":3.31,"y":-18.82},{"time":0.6333,"x":3.81,"y":-13.89,"curve":"stepped"},{"time":0.6667,"x":3.81,"y":-13.89}],"scale":[{"time":0,"x":1,"y":1,"curve":"stepped"},{"time":0.6667,"x":1,"y":1}],"shear":[{"time":0,"x":0,"y":0,"curve":"stepped"},{"time":0.6667,"x":0,"y":0}]}}}}},[0]]],0,0,[0],[-1],[15]],[[[14,"../resources/effect/rMask",[{"hash":1993659294,"name":"../resources/effect/rMask|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"radius","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":["USE_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"radius","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n    highp vec4 cc_reflectionProbeBlendData1;\n    highp vec4 cc_reflectionProbeBlendData2;\n  };\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 color;\n#if USE_TEXTURE\n  in vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nlayout(std140) uniform ARGS{\n  float radius;\n};\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n  #endif\n  o *= color*(1.0-smoothstep(radius-0.05,radius,length(vec2(0.5,0.5)-uv0)));\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 color;\n#if USE_TEXTURE\n  varying vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\n   uniform float radius;\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n  #endif\n  o *= color*(1.0-smoothstep(radius-0.05,radius,length(vec2(0.5,0.5)-uv0)));\n  ALPHA_TEST(o);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":2}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"CC_USE_EMBEDDED_ALPHA","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"}]}],[{"passes":[{"program":"../resources/effect/rMask|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"radius":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]],[[{"name":"public_content","rect":{"x":3,"y":486,"width":370,"height":293},"offset":{"x":0,"y":0},"originalSize":{"width":370,"height":293},"rotated":false,"capInsets":[19.5,19,19.5,19],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[1]],[[[15,"rMask",[{"radius":0.5}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true}]]],0,0,[0],[6],[16]],[[{"name":"img_home_bg7","rect":{"x":3,"y":3,"width":750,"height":477},"offset":{"x":0,"y":0},"originalSize":{"width":750,"height":477},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[1]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,2,2,0,0","mipmaps":["89Smonp2RPRZNEvtD2e1N8"]}],[2],0,[],[],[]],[[[14,"../resources/effect/graySprite",[{"hash":585654652,"name":"../resources/effect/graySprite|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"grays","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":["USE_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"grays","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n    highp vec4 cc_reflectionProbeBlendData1;\n    highp vec4 cc_reflectionProbeBlendData2;\n  };\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 color;\n#if USE_TEXTURE\n  in vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nlayout(std140) uniform ARGS{\n  float grays;\n};\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n  #endif\n  o *= color;\n  float gray = 0.2126*o.r + 0.7152*o.g + 0.0722*o.b;\n  vec4 grayColor = vec4(gray,gray,gray,o.a);\n  o = mix(o,grayColor, grays);\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 color;\n#if USE_TEXTURE\n  varying vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\n   uniform float grays;\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n  #endif\n  o *= color;\n  float gray = 0.2126*o.r + 0.7152*o.g + 0.0722*o.b;\n  vec4 grayColor = vec4(gray,gray,gray,o.a);\n  o = mix(o,grayColor, grays);\n  ALPHA_TEST(o);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":2}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"CC_USE_EMBEDDED_ALPHA","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"}]}],[{"passes":[{"program":"../resources/effect/graySprite|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"grays":{"type":13,"value":[0]}}}]}]]],0,0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,2,2,0,0","mipmaps":["95EkngnxZFbYuFpsqVTaFr"]}],[2],0,[],[],[]],[[{"name":"default_btn_disabled","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"vertices":{"rawPosition":[-20,-20,0,20,-20,0,-20,20,0,20,20,0],"indexes":[0,1,2,2,1,3],"uv":[0,40,40,40,0,0,40,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-20,"y":-20,"z":0},"maxPos":{"x":20,"y":20,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[17]],[[[14,"../resources/effect/graySpine",[{"hash":295277825,"name":"../resources/effect/graySpine|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"grays","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]},{"name":"a_color2","format":44,"location":3,"defines":["TWO_COLORED"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"grays","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n    highp vec4 cc_reflectionProbeBlendData1;\n    highp vec4 cc_reflectionProbeBlendData2;\n  };\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 v_light;\nout vec2 uv0;\n#if TWO_COLORED\n  in vec4 a_color2;\n  out vec4 v_dark;\n#endif\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  pos = cc_matViewProj * pos;\n  uv0 = a_texCoord;\n  v_light = a_color;\n  #if TWO_COLORED\n    v_dark = a_color2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_light;\n#if TWO_COLORED\n  in vec4 v_dark;\n#endif\nin vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nlayout(std140) uniform ARGS{\n  float grays;\n};\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if TWO_COLORED\n    vec4 texColor = vec4(1, 1, 1, 1);\n    texColor *= texture(cc_spriteTexture, uv0);\n     o.a = texColor.a * v_light.a;\n    o.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n  #else\n    o *= texture(cc_spriteTexture, uv0);\n    o *= v_light;\n  #endif\n  ALPHA_TEST(o);\n  float gray = 0.2126*o.r + 0.7152*o.g + 0.0722*o.b;\n  vec4 grayColor = vec4(gray,gray,gray,o.a);\n  o = mix(o,grayColor, grays);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 v_light;\nvarying vec2 uv0;\n#if TWO_COLORED\n  attribute vec4 a_color2;\n  varying vec4 v_dark;\n#endif\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  pos = cc_matViewProj * pos;\n  uv0 = a_texCoord;\n  v_light = a_color;\n  #if TWO_COLORED\n    v_dark = a_color2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_light;\n#if TWO_COLORED\n  varying vec4 v_dark;\n#endif\nvarying vec2 uv0;\nuniform sampler2D cc_spriteTexture;\n   uniform float grays;\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if TWO_COLORED\n    vec4 texColor = vec4(1, 1, 1, 1);\n    texColor *= texture2D(cc_spriteTexture, uv0);\n     o.a = texColor.a * v_light.a;\n    o.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n  #else\n    o *= texture2D(cc_spriteTexture, uv0);\n    o *= v_light;\n  #endif\n  ALPHA_TEST(o);\n  float gray = 0.2126*o.r + 0.7152*o.g + 0.0722*o.b;\n  vec4 grayColor = vec4(gray,gray,gray,o.a);\n  o = mix(o,grayColor, grays);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":[]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":2}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"TWO_COLORED","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"}]}],[{"passes":[{"program":"../resources/effect/graySpine|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"grays":{"type":13,"value":[1]}}}]}]]],0,0,[],[],[]],[[[24,"wait2",2],[9,"wait2",1,[-7,-8],[[25,1,0,-2,[0,"9exvkuZ5VHlI9BaFeQrm8h"],[4,4281545523],4],[7,-3,[0,"58z2KYnohKfbDXMbTaROdZ"]],[4,45,200,150,-4,[0,"0fKbhigW5O87Ccw4yerAdH"]],[3,-5,[0,"0cR2gDl91Ogqbr5dXnjtlN"]],[1,-6,[0,"cdvqK8U29DTpNaJ/gMAlHq"],[5,1920,1080]]],[2,"778sAJaLNEI4FGvawMWU54",null,null,null,-1,0]],[5,"bg_Layer",1,1,[[12,1,0,-9,[0,"00d8hbfnRJ57QCL+e+E1js"],[4,4278716425],0,1],[7,-10,[0,"2cNYl6QUZEZ4aR5ZfsStcl"]],[4,45,200,150,-11,[0,"a4L3JwFNFEQYUBPwwyeu3Z"]],[8,-12,[0,"09HRJmq3ZG5YgFBtw+fxml"]],[13,150,-13,[0,"936kEeGdVD4aXEihUqPCrG"]],[1,-14,[0,"0bf6e1pWdPz6OCtxM7aapa"],[5,1920,1080]]],[2,"f6EDnpSJ9HzK9p3ku/d1YQ",null,null,null,1,0]],[6,"chouma",1,1,[[28,"default","chouma",false,0,-15,[0,"16mGXfHHFMDbnrPUje2vD7"],2,3],[43,0.5,-16,[0,"305rOksAhEoJ7eC4ihI/17"]],[3,-17,[0,"e93wqvwJlBu7QMNTP0yhFD"]],[1,-18,[0,"60TUS8oXxKZbSoyzYgi/Ua"],[5,119,187.63]]],[2,"16dUosRYVDH4hiybeLiqoh",null,null,null,1,0],[1,6.806,12.352,0]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,3,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,3,0,0,3,0,0,3,0,0,3,0,5,1,18],[0,0,0,0,0],[1,3,1,12,1],[0,3,6,18,0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,2,2,0,0","mipmaps":["b7MFJ8MjNBwqr3fNq1j5dJ"]}],[2],0,[],[],[]],[[{"name":"default_panel","rect":{"x":0,"y":0,"width":20,"height":20},"offset":{"x":0,"y":0},"originalSize":{"width":20,"height":20},"rotated":false,"capInsets":[8,8,8,8],"vertices":{"rawPosition":[-10,-10,0,10,-10,0,-10,10,0,10,10,0],"indexes":[0,1,2,2,1,3],"uv":[0,20,20,20,0,0,20,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-10,"y":-10,"z":0},"maxPos":{"x":10,"y":10,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[19]],[[[15,"LineSprite",[{"grays":0.9}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true}]]],0,0,[0],[6],[20]],[[{"name":"record2","rect":{"x":687,"y":748,"width":36,"height":38},"offset":{"x":0,"y":0},"originalSize":{"width":36,"height":38},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[1]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,2,2,0,0","mipmaps":["cdwDhLrDNGvKRP4Z29P2UD"]}],[2],0,[],[],[]],[[{"name":"box_home_11","rect":{"x":759,"y":3,"width":744,"height":121},"offset":{"x":0,"y":0},"originalSize":{"width":744,"height":121},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[1]],[[[16,"wait1"],[9,"wait1",1,[-7,-8],[[25,1,0,-2,[0,"26sflfZJxLSZaurwWxGj+n"],[4,4281545523],4],[7,-3,[0,"78pcuygJtK1LO0jirvZn+0"]],[4,45,200,150,-4,[0,"ceYbM0YH1PJoo+Fj3n+0pE"]],[3,-5,[0,"25lw1lULFDdpuMVAQhFmLR"]],[1,-6,[0,"9fOn48SmtGbq7nbCAuNjYu"],[5,750,1334]]],[2,"d7RJ0wt0pGuq4q3qQzb0sN",null,null,null,-1,0]],[5,"bg_Layer",1,1,[[12,1,0,-9,[0,"05iQVTJWFKzLFctJ3adZWg"],[4,4278716425],0,1],[7,-10,[0,"15oI83VjVBS6DQxHxad0CO"]],[4,45,200,150,-11,[0,"80GlYb/PhI25ddT1Nf6HdA"]],[8,-12,[0,"9bL6O9N25Ip4mcqRDTh4A9"]],[13,150,-13,[0,"deAErda4BMR6LpXm5tK2dM"]],[1,-14,[0,"2dgOfR2lREaoEmZ9zEOj1E"],[5,750,1334]]],[2,"f6EDnpSJ9HzK9p3ku/d1YQ",null,null,null,1,0]],[5,"shaizi",1,1,[[28,"default","shaizi",false,0,-15,[0,"519RGFny1H5ZcKSLxRjnbq"],2,3],[3,-16,[0,"6fGZhmjVxBH7XfIElNzdHJ"]],[1,-17,[0,"5af/LEGUZK54zrxFJxFRQo"],[5,58.23,44.94]]],[2,"170+Kuuj9D/aSPgG9vWHpc",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,3,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,3,0,0,3,0,0,3,0,5,1,17],[0,0,0,0,0],[1,3,1,12,1],[0,3,6,21,0]],[[[16,"showTips"],[9,"showTips",1,[-14,-15],[[4,45,200,150,-2,[0,"840+iMvZ1HT6xoQnEcYOU4"]],[44,true,false,-5,[0,"81IisO3gtPbJEQXBIpC66v"],-4,-3],[46,-11,[0,"9fdcDgcLxMvL4lZOM6ai3S"],-10,-9,-8,-7,-6],[3,-12,[0,"e99R5dLzBKarT1+5DDxib0"]],[1,-13,[0,"a7KJNuwixLsqLSylT8dxhr"],[5,750,1334]]],[2,"f0KLnQf3dKQJY15L+y7xn3",null,null,null,-1,0]],[17,"tip_bg",1,1,[-20,-21,-22,-23,-24,-25,-26,-27],[[20,2,false,-16,[0,"34ZEwGRVFAd5+hOnwy7K3s"],12,13],[8,-17,[0,"01Wo6BgSdFA43EnG2pO3Pd"]],[3,-18,[0,"fbSIs8AfpF2Y8oY6oAwLib"]],[1,-19,[0,"5bmuSleYtEELXh7Dl46CJt"],[5,750,477]]],[2,"40stU7ij9BL6o3U1ymNrEl",null,null,null,1,0],[1,0,-24.075,0]],[5,"bg_Layer",1,1,[[12,1,0,-28,[0,"1bBOMKxQhIsb/CBmujRMeu"],[4,4278716425],0,1],[7,-29,[0,"607OsqUiBL+rmBru7GQzra"]],[4,45,200,150,-30,[0,"01Dz1vgYFEK76ztlu2pJNJ"]],[8,-31,[0,"77o5l3QRhANrpQdJw9oAxb"]],[13,150,-32,[0,"c3a9IOx1FLuK102WTymJck"]],[1,-33,[0,"22WgxQYIpJrZJKXqf/vDgH"],[5,750,1334]]],[2,"a5hALVbKFLO4kwkoWrMZOF",null,null,null,1,0]],[18,"Background",512,1,[-37],[[10,-34,[0,"9eL5pe2PxGjbvPJZS8WK/h"],4,5],[3,-35,[0,"85g59Ul5NBJ7XQ+45O3dbN"]],[1,-36,[0,"0faUvuU51FwJtrJY4xNfcs"],[5,256,76]]],[2,"caqpTDTFBGnrQMv2FWpSGD",null,null,null,1,0]],[18,"Background",512,1,[-41],[[10,-38,[0,"2c8MbBHcFBzrmHorN1VSJw"],6,7],[3,-39,[0,"15981IkltDCrpG+MIvi7Zo"]],[1,-40,[0,"b6v2MxCrtBqq7r6ZlCvW+x"],[5,256,76]]],[2,"eexzp28KNCYo12uHXIvWrm",null,null,null,1,0]],[18,"Background",512,1,[-45],[[10,-42,[0,"feWc+X2NpMKo2P0JwwAk6G"],8,9],[3,-43,[0,"66jF6W+x5DGqv6+o3QD2qT"]],[1,-44,[0,"10EMCkWjpBnIXzDSLdaPcx"],[5,256,76]]],[2,"52bUbGs9hHrKQq+cB5QOMt",null,null,null,1,0]],[19,"sure_btn_1",false,1,2,[4],[[-46,[3,-47,[0,"8ejEg+elVK/5Ugd3iOB24D"]],[1,-48,[0,"60azzmPI5EEpAenl7TCwGv"],[5,256,76]]],1,4,4],[2,"cdo7QErJdE2oNHg/nh2T52",null,null,null,1,0],[1,0,-175,0]],[19,"sure_btn_2",false,1,2,[5],[[-49,[3,-50,[0,"30Y258nyJIhK7YQAsaq4al"]],[1,-51,[0,"32OFtCiR9PJ7BWsTHuJpV5"],[5,256,76]]],1,4,4],[2,"f10Zw7ge5Ktq0NOob+xIdE",null,null,null,1,0],[1,-180,-175,0]],[19,"qx_btn",false,1,2,[6],[[-52,[3,-53,[0,"a7qM2dIV1PxZCN20Bko/fm"]],[1,-54,[0,"12aB4C2lpG54IYKNrLKkXp"],[5,256,76]]],1,4,4],[2,"ebDCxTAr9PELKs1U+xBh3D",null,null,null,1,0],[1,180,-175,0]],[30,"text_content",1,2,[[-55,[3,-56,[0,"a97tM+hy9F4bFoxGnXF61F"]],[1,-57,[0,"a1MoiKHJdKPpdToO2ttvsD"],[5,740,250]]],1,4,4],[2,"f4wupcMlZFuJdagiV26Pbt",null,null,null,1,0],[1,0,31.429,0]],[31,"text_tip",false,1,2,[[-58,[3,-59,[0,"03mcEvIiFE/4uH9qLkjcuK"]],[1,-60,[0,"eaDE0SjyxBZ5OPLZkXEkap"],[5,750,40]]],1,4,4],[2,"b4aoVaV5JKpLZTkR+i94cM",null,null,null,1,0],[1,0,-105,0]],[6,"mb",1,2,[[20,2,false,-61,[0,"34jCGoO9RM1qC2WJSNgBBP"],2,3],[3,-62,[0,"54p2tTcZdH/ZzsCfBXZyi+"]],[1,-63,[0,"42A4rp/AJCt5SgDbIiEzko"],[5,744,121]]],[2,"17MIPLIylJqJ2449QsHYn6",null,null,null,1,0],[1,0,-177.317,0]],[5,"Label",1,4,[[1,-64,[0,"5f4b567/FDMLKcB9jubEKv"],[5,256,50.4]],[21,"OK",31,30,"PingFang SC,Microsoft YaHei,WenQuanYi Micro Hei,sans-serif",2,-65,[0,"0bDhctcspDz4bsvVjaoRjM"]],[11,"General.DialogOk","OK",-66,[0,"4bJz4Lbi5AZoWu2Yr8n/Mn"]]],[2,"b7BwJ+FEZCdb5dg+inUCji",null,null,null,1,0]],[5,"Label",1,5,[[1,-67,[0,"3edT+xkoREkYC+hevRlA0M"],[5,256,50.4]],[21,"OK",31,30,"PingFang SC,Microsoft YaHei,WenQuanYi Micro Hei,sans-serif",2,-68,[0,"94G82IcbRNP6wcIC78PloQ"]],[11,"General.DialogOk","OK",-69,[0,"0a9amCKhZIs5FweLOQereJ"]]],[2,"3aqCehW59BJYWhTxWQQ3Sc",null,null,null,1,0]],[5,"Label",1,6,[[1,-70,[0,"cdtO3hZL1BjJ1bCK4hio9s"],[5,256,50.4]],[21,"Cancel",31,30,"PingFang SC,Microsoft YaHei,WenQuanYi Micro Hei,sans-serif",2,-71,[0,"dciB/EmeFMAbkHpUbZ8kkc"]],[11,"General.DialogCancel","Cancel",-72,[0,"b5FqT5H4VHPpLxbNW73WFD"]]],[2,"71mtl3Ql9Pxr2X2MvOL+T/",null,null,null,1,0]],[6,"icon_jingshi",1,2,[[10,-73,[0,"5cp2U8sb1OtKaTJucXnIMn"],10,11],[3,-74,[0,"c6xlAZ2TRJz5qojvKdZbIq"]],[1,-75,[0,"3e5UG6dTpCm6NMDB+hF6ij"],[5,155,186]]],[2,"542VBZNmJMS6B8sKbQlgQp",null,null,null,1,0],[1,-346.086,235.094,0]],[6,"Label",1,2,[[1,-76,[0,"8f74NwxEVLZ5vzxuok3bY0"],[5,550,100]],[26,"LOG OUT",61,60,"PingFang SC,Microsoft YaHei,WenQuanYi Micro Hei,sans-serif",80,2,true,true,-77,[0,"89bBsgDZtEPKZ1eEUUEJWa"],[4,4278243822]],[11,"logOut","LOG OUT",-78,[0,"6dFSJ2Tc5B4oon/WEcfkDr"]]],[2,"9f5u/TUdxGI6uPaK59Puow",null,null,null,1,0],[1,0,237.129,0]],[39,"hello world hello world hello world hello world",32,32,"PingFang SC,Microsoft YaHei,WenQuanYi Micro Hei,sans-serif",1,true,0,10,[0,"16meLWF3NK9pic/G42WFQL"]],[40,"hello world hello world hello world hello world",20,20,"PingFang SC,Microsoft YaHei,WenQuanYi Micro Hei,sans-serif",1,0,11,[0,"45CbhBf5xOlrN1K+NSQzki"]],[22,3,7,[0,"91jwqYD0VMToUBg1ztSwE/"],[[23,"30f1fNPLVJGv4nAirAcsjYo","tipSure","0",1]],[4,4293322470],[4,4294967295],[4,4291348680],[4,3363338360],4],[22,3,8,[0,"8e/DwxMINLq7E1wmlEeLYi"],[[23,"30f1fNPLVJGv4nAirAcsjYo","tipSure","0",1]],[4,4293322470],[4,4294967295],[4,4291348680],[4,3363338360],5],[22,3,9,[0,"69NFRx4PpH8bIguWWl0U8c"],[[23,"30f1fNPLVJGv4nAirAcsjYo","tipQx","0",1]],[4,4293322470],[4,4294967295],[4,4291348680],[4,3363338360],6]],0,[0,4,1,0,0,1,0,13,2,0,14,3,0,0,1,0,17,19,0,18,18,0,19,22,0,20,21,0,21,20,0,0,1,0,0,1,0,0,1,0,-1,3,0,-2,2,0,0,2,0,0,2,0,0,2,0,0,2,0,-1,10,0,-2,11,0,-3,12,0,-4,7,0,-5,8,0,-6,9,0,-7,16,0,-8,17,0,0,3,0,0,3,0,0,3,0,0,3,0,0,3,0,0,3,0,0,4,0,0,4,0,0,4,0,-1,13,0,0,5,0,0,5,0,0,5,0,-1,14,0,0,6,0,0,6,0,0,6,0,-1,15,0,-1,20,0,0,7,0,0,7,0,-1,21,0,0,8,0,0,8,0,-1,22,0,0,9,0,0,9,0,-1,18,0,0,10,0,0,10,0,-1,19,0,0,11,0,0,11,0,0,12,0,0,12,0,0,12,0,0,13,0,0,13,0,0,13,0,0,14,0,0,14,0,0,14,0,0,15,0,0,15,0,0,15,0,0,16,0,0,16,0,0,16,0,0,17,0,0,17,0,0,17,0,5,1,4,7,7,5,7,8,6,7,9,78],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,19,20,20,20,20,21,21,21,21,22,22,22,22],[1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1,8,9,10,11,8,9,10,11,8,9,10,11],[0,3,0,22,0,7,0,7,0,23,0,8,0,9,0,0,2,2,4,5,2,2,4,5,2,2,4,5]],[[[16,"showNetTips"],[9,"showNetTips",1,[-8,-9],[[4,45,200,150,-2,[0,"331v/xm7pHjLE3SCtHhG9J"]],[45,true,-5,[0,"f0/yy4p21EmpAgJ97CMEns"],-4,-3],[3,-6,[0,"2aTKl2Av1DLL6IohHuB5QX"]],[1,-7,[0,"ab15hJqZpOr55UwBiK+Onv"],[5,750,1334]]],[2,"0bQhnYdaRLhZ531d73AcuE",null,null,null,-1,0]],[17,"tip_bg",1,1,[-14,-15,-16],[[20,2,false,-10,[0,"d6KyuOKChFhKyDBdA2Gtst"],5,6],[8,-11,[0,"d47Ee5y6RGYIncdd6P1P0G"]],[3,-12,[0,"84Azlyh15PzKj4lr57+eSP"]],[1,-13,[0,"44F2N2kxlExbjdtVPCcgkK"],[5,750,477]]],[2,"40stU7ij9BL6o3U1ymNrEl",null,null,null,1,0],[1,0,-35.941,0]],[5,"bg_Layer",1,1,[[12,1,0,-17,[0,"d4YGHs9fpKZIc8txRu0/Sy"],[4,4278716425],0,1],[7,-18,[0,"5b3eI/8wNMRbwE7RsALsPh"]],[4,45,200,150,-19,[0,"96fj3P0HhABITn8oWMwPrf"]],[8,-20,[0,"ba8nG/OMFIdpUYaIKut4MR"]],[13,150,-21,[0,"33ycq/1KhFDJJbzUdoOMxk"]],[1,-22,[0,"ba82nnfItEFK6Ddiq6Q4Ca"],[5,750,1334]]],[2,"a5hALVbKFLO4kwkoWrMZOF",null,null,null,1,0]],[6,"text_content",1,2,[[41,"The server connection is interrupted. Please check the network",36,36,"PingFang SC,Microsoft YaHei,WenQuanYi Micro Hei,sans-serif",1,0,-23,[0,"45VVB0vCVB3YtZqKCbU0kw"],2],[3,-24,[0,"82uk4M9TJBoZTj1kDuM1nF"]],[1,-25,[0,"15VKAgBo5L9rJ9ZD8ftR6H"],[5,700,400]]],[2,"108nEHzuVH5rZ9z2e6fEl9",null,null,null,1,0],[1,0,-12,0]],[6,"icon_jingshi",1,2,[[10,-26,[0,"60BFlZdW1Da6tczcvGS+Pg"],3,4],[3,-27,[0,"3buj4dBDxP3Y76dmh3p35K"]],[1,-28,[0,"ddNUl5nOtI9Ikv1q1MYjNh"],[5,155,186]]],[2,"b2M3S9w0BGEpdZd1iV7HSK",null,null,null,1,0],[1,-346.086,271.035,0]],[6,"Label",1,2,[[1,-29,[0,"5342LunR5EobZq+6NkziGP"],[5,550,100]],[26,"LOG OUT",61,60,"PingFang SC,Microsoft YaHei,WenQuanYi Micro Hei,sans-serif",80,2,true,true,-30,[0,"05bWJUIvZElZRFTeBtn87t"],[4,4278243822]],[11,"logOut","LOG OUT",-31,[0,"a1rC/2X69KYr2lIsx08HD8"]]],[2,"20QSN4cFlHFb8apwVFNHZT",null,null,null,1,0],[1,0,237.129,0]]],0,[0,4,1,0,0,1,0,13,2,0,14,3,0,0,1,0,0,1,0,0,1,0,-1,3,0,-2,2,0,0,2,0,0,2,0,0,2,0,0,2,0,-1,4,0,-2,5,0,-3,6,0,0,3,0,0,3,0,0,3,0,0,3,0,0,3,0,0,3,0,0,4,0,0,4,0,0,4,0,0,5,0,0,5,0,0,5,0,0,6,0,0,6,0,0,6,0,5,1,31],[0,0,0,0,0,0,0],[1,3,1,1,3,1,3],[0,3,0,0,8,0,9]],[[[27,"chouma","\r\nchouma.png\r\nsize: 1024,256\r\nformat: RGBA8888\r\nfilter: Linear,Linear\r\nrepeat: none\r\nic/1\r\n  rotate: false\r\n  xy: 2, 82\r\n  size: 164, 167\r\n  orig: 164, 167\r\n  offset: 0, 0\r\n  index: -1\r\nic/2\r\n  rotate: true\r\n  xy: 351, 116\r\n  size: 133, 167\r\n  orig: 133, 167\r\n  offset: 0, 0\r\n  index: -1\r\nic/3\r\n  rotate: true\r\n  xy: 520, 158\r\n  size: 91, 167\r\n  orig: 91, 167\r\n  offset: 0, 0\r\n  index: -1\r\nic/4\r\n  rotate: true\r\n  xy: 2, 26\r\n  size: 54, 170\r\n  orig: 54, 170\r\n  offset: 0, 0\r\n  index: -1\r\nic/5\r\n  rotate: true\r\n  xy: 2, 2\r\n  size: 22, 167\r\n  orig: 22, 167\r\n  offset: 0, 0\r\n  index: -1\r\nic/6\r\n  rotate: true\r\n  xy: 520, 102\r\n  size: 54, 170\r\n  orig: 54, 170\r\n  offset: 0, 0\r\n  index: -1\r\nic/7\r\n  rotate: true\r\n  xy: 689, 158\r\n  size: 91, 167\r\n  orig: 91, 167\r\n  offset: 0, 0\r\n  index: -1\r\nic/8\r\n  rotate: true\r\n  xy: 168, 116\r\n  size: 133, 181\r\n  orig: 133, 181\r\n  offset: 0, 0\r\n  index: -1\r\nic/guang\r\n  rotate: false\r\n  xy: 858, 176\r\n  size: 103, 73\r\n  orig: 119, 83\r\n  offset: 16, 10\r\n  index: -1\r\n",["chouma.png"],{"skeleton":{"hash":"2ibgT6aXLVXO02kB4EPA0hkD7v4","spine":"3.7.93","width":119,"height":187.63},"bones":[{"name":"root"},{"name":"bone","parent":"root"},{"name":"bone2","parent":"root","x":-88.38,"y":-14.16},{"name":"ic/guang","parent":"bone2","x":107.2,"y":92.47}],"slots":[{"name":"ic/1","bone":"bone","attachment":"ic/7"},{"name":"ic/guang","bone":"ic/guang","color":"ffffff9b","attachment":"ic/guang","blend":"additive"}],"skins":{"default":{"ic/1":{"ic/1":{"y":0.5,"width":164,"height":167},"ic/2":{"x":0.5,"y":0.5,"width":133,"height":167},"ic/3":{"x":0.5,"y":0.5,"width":91,"height":167},"ic/4":{"y":2.17,"width":54,"height":170},"ic/5":{"y":0.39,"width":22,"height":167},"ic/6":{"y":2.37,"width":54,"height":170},"ic/7":{"x":0.5,"y":-0.22,"width":91,"height":167},"ic/8":{"x":0.5,"y":7,"width":133,"height":181}},"ic/guang":{"ic/guang":{"x":-11.19,"y":-15.9,"width":119,"height":83}}}},"animations":{"chouma":{"slots":{"ic/1":{"attachment":[{"time":0,"name":"ic/1"},{"time":0.0667,"name":"ic/2"},{"time":0.1333,"name":"ic/3"},{"time":0.2,"name":"ic/4"},{"time":0.2667,"name":"ic/5"},{"time":0.3333,"name":"ic/6"},{"time":0.4,"name":"ic/7"},{"time":0.4667,"name":"ic/8"},{"time":0.5333,"name":"ic/1"},{"time":0.6,"name":"ic/2"},{"time":0.6667,"name":"ic/3"},{"time":0.7333,"name":"ic/4"},{"time":0.8,"name":"ic/5"},{"time":0.8667,"name":"ic/6"},{"time":0.9333,"name":"ic/7"},{"time":1,"name":"ic/8"},{"time":1.0333,"name":"ic/8"}]},"ic/guang":{"color":[{"time":0,"color":"ffffff00","curve":"stepped"},{"time":0.5,"color":"ffffff00"},{"time":0.6667,"color":"ffffffa0"},{"time":0.9,"color":"ffffff00","curve":"stepped"},{"time":1.0333,"color":"ffffff00"}]}},"bones":{"ic/guang":{"rotate":[{"time":0,"angle":0,"curve":"stepped"},{"time":0.5,"angle":0,"curve":"stepped"},{"time":0.9,"angle":0,"curve":"stepped"},{"time":1.0333,"angle":0}],"translate":[{"time":0,"x":0,"y":0},{"time":0.5,"x":-13.55,"y":0},{"time":0.9,"x":0,"y":0,"curve":"stepped"},{"time":1.0333,"x":0,"y":0}],"scale":[{"time":0,"x":1,"y":1},{"time":0.5,"x":0.5,"y":0.5},{"time":0.9,"x":1.2,"y":1.2},{"time":1.0333,"x":1,"y":1}],"shear":[{"time":0,"x":0,"y":0,"curve":"stepped"},{"time":0.5,"x":0,"y":0,"curve":"stepped"},{"time":0.9,"x":0,"y":0,"curve":"stepped"},{"time":1.0333,"x":0,"y":0}]}}}}},[0]]],0,0,[0],[-1],[24]]]]
